
const refName = {
  _refName: {},
  config: {
    refName: 'name'
  },
  isInstalled: false,
  install: function (Vue, config) {
    if (this.isInstalled) return
    let configRefName
    if (!config || Object.prototype.toString.call(config) !== '[object Object]') {
      configRefName = refName.config.refName
    } else {
      configRefName = config.refName || refName.config.refName
    }
    if (Object.prototype.toString.call(configRefName) !== '[object String]') {
      console.error('unKnow refName type')
      return false
    }
    Vue.prototype.$refName = refName._refName
    Vue.mixin({
      mounted: function () {
        if (this.$options[configRefName]) {
          let optionsName = this.$options[configRefName]
          if (Object.prototype.toString.call(optionsName) === '[object Function]') {
            optionsName = optionsName.call(this)
          }
          if (optionsName in refName._refName) return
          refName._refName[optionsName] = this
        }
      }
    })
    refName.isInstalled = true
  }
}

export default refName
